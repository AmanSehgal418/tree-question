Recursive:

class Solution {
    public int maxDepth(TreeNode root) {
        if(root == null) return 0; 
        
        int lh = maxDepth(root.left); 
        int rh = maxDepth(root.right); 
        
        return 1 + Math.max(lh, rh); 
    }
}

level order:

class Solution {
  public static int maxDepth(Node root) {
    
        if( root == null ){
            return 0;
        }

        Queue<Node> queue = new LinkedList<>();
        queue.add(root);

        int level = 0;

        while( queue.size() > 0 ){
            int size = queue.size();

            while( size-- > 0 ){
                Node temp = queue.remove();
                if( temp.left != null ){
                    queue.add(temp.left );
                }
                if( temp.right != null ){
                        queue.add( temp.right );
                }
            }

            level++;
        }

        return level;
    }  
}
