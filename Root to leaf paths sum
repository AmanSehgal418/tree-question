class Tree1
{  
    
	public static long treePathsSum(Node root)
  {
         // Pass the initial value as 0 as there is nothing above root
        return treePathsSumUtil(root, 0);
	}
	
   static long treePathsSumUtil(Node root, long val)
    {
        long ans = 0;
        // Base case
        if (root == null)
            return 0;
  
        // Update val
        val = (val * 10 + root.data);
  
        // if current node is leaf, return the current value of val
        if (root.left == null && root.right == null){
            ans += val;
            return ans;
        }
        
        // recur sum of values for left and right subtree
        return treePathsSumUtil(root.left, val)
                + treePathsSumUtil(root.right, val);
        
    }
}
